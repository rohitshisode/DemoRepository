public with sharing class EftHandler {
    //public RecordType rt = [select Id from RecordType where Name = 'Assignment' and SobjectType = 'Case' limit 1];
    
    public static void checkEftAndAddCases(List<EFT_Transaction_Status__c> eftList){
        List<EFT_Transaction_Status__c> queryEftList = new List<EFT_Transaction_Status__c>(); 
        for(EFT_Transaction_Status__c eft:eftList){
            if(eft.Method_of_Transaction__c == 'Credit Card Address Verify' && eft.Transaction_Status__c == 'Declined'){
                queryEftList.add(eft);
            }
        }
        List<EFT_Transaction_Status__c> eftMap = new List<EFT_Transaction_Status__c>([SELECT SalesHeader__r.Status__c FROM EFT_Transaction_Status__c WHERE Id IN :queryEftList AND SalesHeader__r.Status__c ='Open']);
        EftHandler.createCaseRecords(eftMap);
    }
    /*Checks if given EFT record meets the criteria*/
    public static boolean checkEftFields(EFT_Transaction_Status__c eft){
        System.debug('Inside Handler::'+eft.Method_of_Transaction__c+' '+eft.Transaction_Status__c+' '+eft.SalesHeader__r.Status__c);
        if(eft.Method_of_Transaction__c == 'Credit Card Address Verify' && eft.Transaction_Status__c == 'Declined' && eft.SalesHeader__r.Status__c == 'Open'){
            return true;
        }else{
            System.debug('Inside Handler else');
            return false;
        }
    }
    
    /*Creates Case record with given mapping if above conditions are true*/
    
    public static Case createCaseRecords(EFT_Transaction_Status__c eft){
        Id devRecordTypeId = Schema.SObjectType.Case.getRecordTypeInfosByName().get('Assignment').getRecordTypeId();
        Case caseInstance = new Case();
        caseInstance.AccountId = eft.SalesHeader__r.Account__c;
        caseInstance.ContactId = eft.SalesHeader__r.Contact__c;
        caseInstance.RecordTypeId = devRecordTypeId;
        caseInstance.Origin = 'Internal';
        //caseInstance.Owner = 'AVS Queue';
        caseInstance.Reason = 'Address Did Not Verify';
        caseInstance.Status = 'New';
        caseInstance.Priority = 'High';
        caseInstance.Type = 'Address Did Not Verify';
        caseInstance.Subject = eft.SalesHeader__r.Account__r.Name+' '+caseInstance.Type;
        caseInstance.SalesHeader__c =eft.SalesHeader__c;
        caseInstance.Transaction_Status__c = eft.Transaction_Status__c;
        caseInstance.Order_Date__c = eft.Transaction_Date__c;
        return caseInstance;
    }
    
    
}